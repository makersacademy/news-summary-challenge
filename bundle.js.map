{
  "version": 3,
  "sources": ["newsModel.js", "newsView.js", "node_modules/guardian-js/dist/Endpoint.js", "node_modules/guardian-js/dist/Client.js", "node_modules/guardian-js/dist/index.js", "newsClient.js", "index.js"],
  "sourcesContent": ["class NewsModel {\n    constructor() {\n        this.articlesArray = []\n    }\n\n    formatArticles(article) {\n        return {\n            title: article.webTitle,\n            url: article.webUrl\n        }\n    }\n\n    setArticles(response) {\n        response.forEach((article) => {\n            // this.articlesArray.push(this.formatArticles(article))\n            // This line should reduce the array of objects returned in \n            // 'response' to the title and URL and put that into the articlesArray;\n            // presently it doesn't work, so the below line is a stand-in that\n            // just pushes the title for presentation on the client\n            this.articlesArray.push(article.webTitle)\n        })\n    }\n\n    getArticles() {\n        return this.articlesArray\n    }\n}\n\nmodule.exports = NewsModel;", "class NewsView {\n    constructor(model, client) {\n        this.model = model\n        this.client = client\n        this.mainContainerEl = document.querySelector('#main-container')\n        document.querySelector(\"#search-button\").addEventListener('click', () =>{\n            let searchInput = document.querySelector('#search-bar-input').value\n            this.displayArticlesByTopic(searchInput)\n            document.querySelector('#search-bar-input').value = \"\"\n        })\n    }\n\n    displayArticles() {\n    this.client.loadArticles((response) => {\n        this.model.setArticles(response)\n        console.log(response)\n        for (let index = 0; index < this.model.getArticles().length; index++) {\n            const divElement = document.createElement('div')\n            divElement.className = \"article\";\n            divElement.innerText = this.model.getArticles()[index];\n            this.mainContainerEl.append(divElement);}\n        })\n    }\n\n    displayArticlesByTopic(searchQuery) {\n        let searchTerms = `q=${searchQuery}`\n        this.client.loadArticlesByTopic(searchTerms, (response) => {\n            this.model.setArticles(response)\n            console.log(response)\n            for (let index = 0; index < this.model.getArticles().length; index++) {\n                const divElement = document.createElement('div')\n                divElement.className = \"article\";\n                divElement.innerText = this.model.getArticles()[index];\n                this.mainContainerEl.append(divElement);}\n            })\n        }\n        //this will take searchInput as its argument and use\n        // the client loadArticles API call to display articles\n        // matching the topic inputted\n    }\n\n\nmodule.exports = NewsView;", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Endpoint = void 0;\nclass GuardianJSInvalidMethodException {\n    constructor(message) {\n        this.message = message;\n        this.name = 'GuardianJSInvalidMethodException';\n    }\n}\nclass Endpoint {\n    constructor(endpoint, key, useSSL, availableFunctions = ['search']) {\n        this.endpoint = endpoint;\n        this.key = key;\n        this.http = useSSL ? 'https://' : 'http://';\n        this.base = `${this.http}content.guardianapis.com`;\n        this.availableFunctions = availableFunctions;\n    }\n    /**\n     * Internal request wrapper\n     * @param url URL to send the request to\n     * @returns Response data\n     */\n    async _request(url) {\n        const resp = await fetch(url);\n        const body = await resp.json();\n        if (resp.status >= 400) {\n            throw new Error(body.message);\n        }\n        return body.response;\n    }\n    /**\n     * Search the Guardian api\n     * @param query The string to search on\n     * @param filters A list of filters\n     * @returns Response data\n     */\n    async search(query = '', filters = {}) {\n        if (!this.availableFunctions.includes('search')) {\n            throw new GuardianJSInvalidMethodException('search is an invalid method');\n        }\n        let filter = '';\n        Object.entries(filters).forEach((entry) => {\n            const key = entry[0].replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n            filter = `${filter}&${key}=${entry[1]}`;\n        });\n        return this._request(`${this.base}/${this.endpoint}?api-key=${this.key}&q=${query}${filter}`);\n    }\n    /**\n     * Get an item by ID\n     * @param id ID of the item to get\n     * @returns Response data\n     */\n    async getById(id) {\n        if (!this.availableFunctions.includes('getById')) {\n            throw new GuardianJSInvalidMethodException('getById is an invalid method');\n        }\n        return this._request(`${this.base}/${id}?api-key=${this.key}`);\n    }\n}\nexports.Endpoint = Endpoint;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst Endpoint_1 = require(\"./Endpoint\");\nclass Client {\n    constructor(key, secure = false) {\n        this.content = new Endpoint_1.Endpoint('search', key, secure);\n        this.tags = new Endpoint_1.Endpoint('tags', key, secure);\n        this.sections = new Endpoint_1.Endpoint('sections', key, secure);\n        this.editions = new Endpoint_1.Endpoint('editions', key, secure);\n        this.item = new Endpoint_1.Endpoint(null, key, secure, ['getById']);\n    }\n}\nexports.Client = Client;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Client_1 = require(\"./Client\");\nexports.default = Client_1.Client;\n", "import Guardian from './node_modules/guardian-js';\n\nclass NewsClient {\n\n  loadArticles(callback) {\n    console.log(\"LOADING ARTICLES\")\n    const api = new Guardian('883024d4-b7ae-40f2-a680-9684ed4072fe', true)\n    api.content.search('uk')\n    .then(response => callback(response.results))\n  }\n\n    loadArticlesByTopic(searchQuery, callback) {\n        fetch(`https://content.guardianapis.com/search?${searchQuery}`)\n          .then(response => response.json())\n          .then(response => {callback(response)})\n          .catch((error) => {displayError(error)})\n        // I've not tested this but I think it will function with \n        // a bit of debugging\n    }\n  }\n\n\nmodule.exports = NewsClient;", "const NewsModel = require('./newsModel')\nconst NewsView = require('./newsView')\nconst NewsClient = require('./newsClient')\n\n\nconst client = new NewsClient;\nconst model = new NewsModel\nconst view = new NewsView(model, client)\n\nview.displayArticles() "],
  "mappings": "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",
  "names": ["NewsModel", "NewsView", "model", "client", "NewsClient", "Guardian"]
}
